# the machine should have the repo on the home
name: Deploy the Nginx
on:
  push:
    branches:
      - "master"
jobs:
  clean:
    name: clean
    runs-on: ubuntu-latest
    steps:
    - name: delete old deploys
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        script: |
          rm -f /etc/nginx/sites-available/*
          rm -f /etc/nginx/sites-enabled/*
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    needs: clean
    
    steps:
    - uses: actions/checkout@master
    - name: copy file via ssh password
      uses: appleboy/scp-action@v0.1.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        source: "reverse-proxy"
        target: "/etc/nginx/sites-available"
        strip_components: 1

  enable-sites:
    name: enable-sites
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: create symlinks
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        script: |
          cd /etc/nginx/sites-available/
          for file in `ls *.dev`; do echo "creating the symbolic link of $file"; ln -s /etc/nginx/sites-available/$file /etc/nginx/sites-enabled/$file ; done

  certbot:
    name: certbot
    runs-on: ubuntu-latest
    needs: enable-sites
    steps:
    - name: create symlinks
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        script: |
          cd /etc/nginx/sites-available/
          for file in `ls *.dev`; do echo "creating the cert for $file"; certbot --nginx -d $file -n ; done
